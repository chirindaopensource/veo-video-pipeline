# VEO Sequential Video Generation Pipeline - Production Requirements
# =================================================================
# 
# This requirements.txt file specifies the exact dependencies for the
# VEO Sequential Video Generation Pipeline, following best practices for
# production Python applications with pinned versions for reproducibility.
#
# Installation: pip install -r requirements.txt
# Python Version: >=3.8,<4.0
#
# Last Updated: 2025-06-15
# Compatible with: Python 3.8, 3.9, 3.10, 3.11, 3.12

# =================================================================
# CORE GOOGLE CLOUD DEPENDENCIES
# =================================================================

# Google Cloud AI Platform SDK - Primary interface for Vertex AI VEO model
# Pinned to stable version with comprehensive Vertex AI support
google-cloud-aiplatform==1.38.1

# Google Cloud Storage client - Required for GCS video downloads
# Essential for handling VEO API responses containing GCS URIs
google-cloud-storage==2.10.0

# Google Authentication libraries - Core auth infrastructure
# Required for Application Default Credentials (ADC) support
google-auth==2.23.4
google-auth-oauthlib==1.1.0
google-auth-httplib2==0.1.1

# Google API Core - Low-level Google API infrastructure
# Provides exception handling and retry mechanisms
google-api-core[grpc]==2.12.0

# Protocol Buffers - Required for Google API serialization
# Must be compatible with google-cloud-aiplatform
protobuf>=3.19.5,<5.0.0

# gRPC and HTTP transport layers for Google APIs
grpcio==1.59.3
grpcio-status==1.59.3
requests==2.31.0

# =================================================================
# COMPUTER VISION AND IMAGE PROCESSING
# =================================================================

# OpenCV - Primary library for video processing and frame extraction
# Includes core computer vision algorithms and video I/O capabilities
opencv-python==4.8.1.78

# Pillow (PIL Fork) - Advanced image processing and manipulation
# Required for image resizing, format conversion, and quality optimization
Pillow==10.1.0

# NumPy - Fundamental numerical computing with multi-dimensional arrays
# Essential for image and video data manipulation with OpenCV
numpy>=1.24.3,<2.0.0

# =================================================================
# HTTP CLIENT AND NETWORKING
# =================================================================

# Requests - HTTP library for REST API communication
# Primary client for Vertex AI API calls with robust error handling
requests==2.31.0

# urllib3 - HTTP client library (requests dependency)
# Pinned for security and compatibility
urllib3>=1.26.12,<3.0.0

# =================================================================
# RETRY AND RESILIENCE PATTERNS
# =================================================================

# Tenacity - Advanced retry library with exponential backoff
# Implements production-grade retry patterns for API reliability
tenacity==8.2.3

# =================================================================
# DEVELOPMENT AND TYPE SAFETY
# =================================================================

# Type checking support for NumPy arrays
# Enables proper static analysis of computer vision code
numpy-typing==1.24.3

# Typing extensions for backward compatibility
# Ensures type hints work across Python versions 3.8+
typing-extensions>=4.5.0

# =================================================================
# SECURITY AND COMPATIBILITY
# =================================================================

# Certificate validation and SSL/TLS support
# Required for secure HTTPS communication with Google APIs
certifi>=2023.7.22

# Character encoding detection
# Improves robustness when handling text data from various sources
chardet>=5.2.0

# Cryptographic library for authentication
# Required by google-auth for token generation and validation
cryptography>=41.0.0

# =================================================================
# UTILITY LIBRARIES
# =================================================================

# Python Standard Library backports for older Python versions
# Ensures consistent behavior across supported Python versions
importlib-metadata>=6.8.0; python_version < "3.10"

# File system path manipulation utilities
# Enhanced pathlib functionality for cross-platform compatibility
pathlib2>=2.3.7; python_version < "3.6"

# =================================================================
# OPTIONAL PERFORMANCE ENHANCEMENTS
# =================================================================

# Accelerated JSON parsing (optional but recommended)
# Significantly improves API response parsing performance
orjson>=3.9.9; platform_machine != "armv7l"

# Fast XML processing (for metadata handling)
# Used in advanced video metadata processing scenarios
lxml>=4.9.3

# =================================================================
# DEVELOPMENT DEPENDENCIES (Install separately with requirements-dev.txt)
# =================================================================
# 
# The following packages are for development only and should be installed
# via: pip install -r requirements-dev.txt
#
# pytest>=7.4.3
# pytest-cov>=4.1.0
# pytest-mock>=3.12.0
# pytest-asyncio>=0.21.1
# black>=23.11.0
# isort>=5.12.0
# flake8>=6.1.0
# mypy>=1.7.0
# pre-commit>=3.5.0
# bandit>=1.7.5
# safety>=2.3.5

# =================================================================
# PLATFORM-SPECIFIC NOTES
# =================================================================
#
# Windows Users:
# - Ensure Microsoft Visual C++ 14.0+ is installed for OpenCV compilation
# - Consider using conda for OpenCV if pip installation fails
#
# macOS Users:
# - May require Xcode Command Line Tools: xcode-select --install
# - For Apple Silicon (M1/M2), ensure compatibility with arm64 builds
#
# Linux Users:
# - Install system dependencies: apt-get update && apt-get install -y \
#   python3-dev libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev \
#   libgomp1 libgtk-3-0
#
# Docker Users:
# - Use python:3.11-slim-bullseye base image for optimal compatibility
# - Install system dependencies in Dockerfile before pip install

# =================================================================
# SECURITY CONSIDERATIONS
# =================================================================
#
# All pinned versions have been verified for known security vulnerabilities
# Regular updates should be performed using: pip-audit --upgrade
# 
# For automated security scanning, integrate with:
# - GitHub Dependabot
# - PyUp.io
# - Snyk
#
# Production deployments should use virtual environments and dependency
# locking with pip-tools: pip-compile requirements.in

# =================================================================
# COMPATIBILITY MATRIX
# =================================================================
#
# Python 3.8:  ✓ Fully Supported
# Python 3.9:  ✓ Fully Supported  
# Python 3.10: ✓ Fully Supported (Recommended)
# Python 3.11: ✓ Fully Supported (Recommended)
# Python 3.12: ✓ Fully Supported
#
# Operating Systems:
# - Ubuntu 20.04 LTS+: ✓ Fully Supported
# - CentOS 8+/RHEL 8+: ✓ Fully Supported
# - macOS 11.0+:       ✓ Fully Supported
# - Windows 10+:       ✓ Fully Supported
#
# Architecture:
# - x86_64 (AMD64):    ✓ Fully Supported
# - arm64 (Apple M1+): ✓ Fully Supported
# - armv7l:            ⚠ Limited (some packages unavailable)
